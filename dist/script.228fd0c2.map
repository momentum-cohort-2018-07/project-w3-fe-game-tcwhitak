{"version":3,"sources":["src/Bullet.js","src/Invaders.js","src/Constants.js","src/Keyboarder.js","src/Player.js","src/Game.js","script.js"],"names":["Bullet","center","velocity","size","x","y","color","Invader","game","patrolX","speedX","Math","random","invadersBelow","bullet","addBody","createInvaders","invaders","i","push","drawRect","screen","body","fillStyle","fillRect","colliding","b1","b2","Keyboarder","keyState","window","addEventListener","e","keyCode","console","log","isDown","KEYS","LEFT","RIGHT","S","Player","gameSize","keyboarder","shootSound","load","play","Game","canvas","document","getElementById","getContext","width","height","score","bodies","concat","tick","update","draw","requestAnimationFrame","notCollidingWithAnything","filter","length","clearRect","invader","b","abs","start"],"mappings":"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","file":"script.228fd0c2.map","sourceRoot":"..","sourcesContent":["// Bullet\n// ------\n\n// **new Bullet()** creates a new bullet.\nclass Bullet {\n  constructor (center, velocity) {\n    this.center = center\n    this.size = { x: 3, y: 3 }\n    this.velocity = velocity\n    this.color = 'black'\n  }\n\n  // **update()** updates the state of the bullet for a single tick.\n  update () {\n    // Add velocity to center to move bullet.\n    this.center.x += this.velocity.x\n    this.center.y += this.velocity.y\n  }\n}\n\nexport default Bullet\n","import Bullet from './Bullet'\n\n// Invaders\n// --------\n\n// **new Invader()** creates an invader.\nclass Invader {\n  constructor (game, center) {\n    this.game = game\n    this.center = center\n    this.size = { x: 15, y: 15 }\n    this.color = 'purple'\n\n    // Invaders patrol from left to right and back again.\n    // `this.patrolX` records the current (relative) position of the\n    // invader in their patrol.  It starts at 0, increases to 40, then\n    // decreases to 0, and so forth.\n    this.patrolX = 0\n\n    // The x speed of the invader.  A positive value moves the invader\n    // right. A negative value moves it left.\n    this.speedX = 0.3\n  }\n\n  // **update()** updates the state of the invader for a single tick.\n  update () {\n    // If the invader is outside the bounds of their patrol...\n    if (this.patrolX < 0 || this.patrolX > 30) {\n      // ... reverse direction of movement.\n      this.speedX = -this.speedX\n    }\n\n    // If coin flip comes up and no friends below in this\n    // invader's column...\n    if (Math.random() > 0.995 &&\n              !this.game.invadersBelow(this)) {\n      // ... create a bullet just below the invader that will move\n      // downward...\n      const bullet = new Bullet({ x: this.center.x, y: this.center.y + this.size.y / 2 },\n        { x: Math.random() - 0.5, y: 2 })\n\n      // ... and add the bullet to the game.\n      this.game.addBody(bullet)\n    }\n\n    // Move according to current x speed.\n    this.center.x += this.speedX\n\n    // Update variable that keeps track of current position in patrol.\n    this.patrolX += this.speedX\n  }\n}\n\nexport default Invader\n","import Invader from './Invaders'\n// **createInvaders()** returns an array of twenty-four invaders.\nexport const createInvaders = function (game) {\n  const invaders = []\n  for (let i = 0; i < 24; i++) {\n    // Place invaders in eight columns.\n    let x = 30 + (i % 8) * 30\n\n    // Place invaders in three rows.\n    let y = 30 + (i % 3) * 30\n\n    // Create invader.\n    invaders.push(new Invader(game, {x: x, y: y}))\n  }\n\n  return invaders\n}\n\n// Other functions\n// ---------------\n\n// **drawRect()** draws passed body as a rectangle to `screen`, the drawing context.\nexport const drawRect = function (screen, body) {\n  screen.fillStyle = body.color\n  screen.fillRect(body.center.x - body.size.x / 2, body.center.y - body.size.y / 2,\n    body.size.x, body.size.y)\n}\n\n// **colliding()** returns true if two passed bodies are colliding.\n// The approach is to test for five situations.  If any are true,\n// the bodies are definitely not colliding.  If none of them\n// are true, the bodies are colliding.\n// 1. b1 is the same body as b2.\n// 2. Right of `b1` is to the left of the left of `b2`.\n// 3. Bottom of `b1` is above the top of `b2`.\n// 4. Left of `b1` is to the right of the right of `b2`.\n// 5. Top of `b1` is below the bottom of `b2`.\nexport const colliding = function (b1, b2) {\n  return !(\n    b1 === b2 ||\n          b1.center.x + b1.size.x / 2 < b2.center.x - b2.size.x / 2 ||\n          b1.center.y + b1.size.y / 2 < b2.center.y - b2.size.y / 2 ||\n          b1.center.x - b1.size.x / 2 > b2.center.x + b2.size.x / 2 ||\n          b1.center.y - b1.size.y / 2 > b2.center.y + b2.size.y / 2\n  )\n}\n","// Keyboard input tracking\n// -----------------------\n\n// **new Keyboarder()** creates a new keyboard input tracking object.\nclass Keyboarder {\n  constructor () {\n    // Records up/down state of each key that has ever been pressed.\n    const keyState = {}\n\n    // When key goes down, record that it is down.\n    window.addEventListener('keydown', function (e) {\n      keyState[e.keyCode] = true\n      console.log('key down', e.keyCode)\n    })\n\n    // When key goes up, record that it is up.\n    window.addEventListener('keyup', function (e) {\n      keyState[e.keyCode] = false\n      console.log('key up', e.keyCode)\n    })\n\n    // Returns true if passed key is currently down.  `keyCode` is a\n    // unique number that represents a particular key on the keyboard.\n    this.isDown = function (keyCode) {\n      return keyState[keyCode] === true\n    }\n\n    // Handy constants that give keyCodes human-readable names.\n    this.KEYS = { LEFT: 37, RIGHT: 39, S: 83 }\n  }\n}\n\nexport default Keyboarder\n","import Keyboarder from './Keyboarder'\nimport Bullet from './Bullet'\n\n// Player\n// ------\n\n// **new Player()** creates a player.\nclass Player {\n  constructor (game, gameSize) {\n    this.game = game\n    this.size = { x: 15, y: 15 }\n    this.center = { x: gameSize.x / 2, y: gameSize.y - this.size.y * 2 }\n    this.color = 'green'\n\n    // Create a keyboard object to track button presses.\n    this.keyboarder = new Keyboarder()\n  }\n\n  // **update()** updates the state of the player for a single tick.\n  update () {\n    // If left cursor key is down...\n    if (this.keyboarder.isDown(this.keyboarder.KEYS.LEFT)) {\n      // ... move left.\n      this.center.x -= 2\n    } else if (this.keyboarder.isDown(this.keyboarder.KEYS.RIGHT)) {\n      this.center.x += 2\n    }\n\n    // If S key is down...\n    if (this.keyboarder.isDown(this.keyboarder.KEYS.S)) {\n      // ... create a bullet just above the player that will move upwards...\n      const bullet = new Bullet({ x: this.center.x, y: this.center.y - this.size.y - 10 },\n        { x: 0, y: -7 })\n\n      // ... add the bullet to the game...\n      this.game.addBody(bullet)\n\n      // ... rewind the shoot sound...\n      this.game.shootSound.load()\n\n      // ... and play the shoot sound.\n      this.game.shootSound.play()\n    }\n  }\n}\n\nexport default Player\n","import {createInvaders, colliding, drawRect} from './Constants'\nimport Player from './Player'\nimport Invader from './Invaders'\n// Main game object\n// ----------------\n\n// **new Game()** Creates the game object with the game state and logic.\nclass Game {\n  constructor () {\n    // In index.html, there is a canvas tag that the game will be drawn in.\n    // Grab that canvas out of the DOM.\n    const canvas = document.getElementById('space-invaders')\n\n    // Get the drawing context.  This contains functions that const you draw to the canvas.\n    const screen = canvas.getContext('2d')\n\n    // Note down the dimensions of the canvas.  These are used to\n    // place game bodies.\n    const gameSize = { x: canvas.width, y: canvas.height }\n\n    // initial score for game\n    this.score = 0\n\n    // Create the bodies array to hold the player, invaders and bullets.\n    this.bodies = []\n\n    // Add the invaders to the bodies array.\n    this.bodies = this.bodies.concat(createInvaders(this))\n\n    // Add the player to the bodies array.\n    this.bodies = this.bodies.concat(new Player(this, gameSize))\n\n    // In index.html, there is an audio tag that loads the shooting sound.\n    // Get the shoot sound from the DOM and store it on the game object.\n    this.shootSound = document.getElementById('shoot-sound')\n\n    // Main game tick function.  Loops forever, running 60ish times a second.\n    const tick = () => {\n      // Update game state.\n      this.update()\n\n      // Draw game bodies.\n      this.draw(screen, gameSize)\n\n      // Queue up the next call to tick with the browser.\n      window.requestAnimationFrame(tick)\n    }\n\n    // Run the first game tick.  All future calls will be scheduled by\n    // the tick() function itself.\n    this.tick = tick\n  }\n\n  start () {\n    this.tick()\n  }\n\n  // **update()** runs the main game logic.\n  update () {\n    // `notCollidingWithAnything` returns true if passed body\n    // is not colliding with anything.\n    const notCollidingWithAnything = (b1) => {\n      return this.bodies.filter((b2) => { return colliding(b1, b2) }).length === 0\n    }\n\n    // Throw away bodies that are colliding with something. They\n    // will never be updated or draw again.\n    this.bodies = this.bodies.filter(notCollidingWithAnything)\n\n    // Call update on every body.\n    for (let i = 0; i < this.bodies.length; i++) {\n      this.bodies[i].update()\n    }\n  }\n\n  // **draw()** draws the game.\n  draw (screen, gameSize) {\n    // Clear away the drawing from the previous tick.\n    screen.clearRect(0, 0, gameSize.x, gameSize.y)\n\n    // Draw each body as a rectangle.\n    for (let i = 0; i < this.bodies.length; i++) {\n      drawRect(screen, this.bodies[i])\n    }\n  }\n\n  // **invadersBelow()** returns true if `invader` is directly\n  // above at least one other invader.\n  invadersBelow (invader) {\n    // If filtered array is not empty, there are invaders below.\n    return this.bodies.filter(function (b) {\n      // Keep `b` if it is an invader, if it is in the same column\n      // as `invader`, and if it is somewhere below `invader`.\n      return b instanceof Invader &&\n            Math.abs(invader.center.x - b.center.x) < b.size.x &&\n            b.center.y > invader.center.y\n    }).length > 0\n  }\n\n  // **addBody()** adds a body to the bodies array.\n  addBody (body) {\n    this.bodies.push(body)\n  }\n}\n\nexport default Game\n","// import Game class so game can be loaded\nimport Game from './src/Game'\n\n// Start game\n// ----------\n\n// When the DOM is ready, create (and start) the game.\nwindow.addEventListener('load', function () {\n  let game = new Game()\n  game.start()\n})\n"]}